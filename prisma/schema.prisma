// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  city            String
  contact         CustomerContact   @relation(fields: [contactId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contactId       String            @db.ObjectId
  createdAt       DateTime?         @default(now())
  createdBy       User              @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById     String            @default("65cf714143abe8bc908d8096") @db.ObjectId
  crmInteractions CRMInteraction[]
  ennisNumber     Int               @unique
  label           String
  state           String
  territory       CustomerTerritory @relation(fields: [territoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  territoryId     String            @db.ObjectId
  updatedAt       DateTime?         @updatedAt
  zip             String
}

model CustomerContact {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime?  @default(now())
  createdBy   User       @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String     @default("65cf714143abe8bc908d8096") @db.ObjectId
  customers   Customer[]
  name        String
  phone       Int
  updatedAt   DateTime?  @updatedAt
}

model CustomerTerritory {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime?  @default(now())
  createdBy   User       @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String     @default("65cf714143abe8bc908d8096") @db.ObjectId
  customers   Customer[]
  label       String     @unique
  updatedAt   DateTime?  @updatedAt
}

model CRMInteraction {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime?          @default(now())
  createdBy   User               @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String             @default("65cf714143abe8bc908d8096") @db.ObjectId
  customer    Customer           @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customerId  String             @db.ObjectId
  date        DateTime           @default(now())
  result      String
  type        CRMInteractionType @relation(fields: [typeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  typeId      String             @db.ObjectId
  updatedAt   DateTime?          @updatedAt
}

model CRMInteractionType {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime?        @default(now())
  createdBy    User             @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById  String           @default("65cf714143abe8bc908d8096") @db.ObjectId
  label        String           @unique
  interactions CRMInteraction[]
  updatedAt    DateTime?        @updatedAt
}

model Log {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime? @default(now())
  createdBy   User      @relation(name: "createdByLog", fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String    @default("65cf714143abe8bc908d8096") @db.ObjectId
  data        String
  model       String
  route       String
  updatedAt   DateTime? @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String    @db.ObjectId
  type        String
}

model QuoteMarginQuote {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt               DateTime? @default(now())
  createdBy               User      @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById             String    @default("65cf714143abe8bc908d8096") @db.ObjectId
  customerType            String    @default("direct")
  laborAmount             Float?
  previousLaborAmount     Float?
  previousMarginAmount    Float?
  previousMaterialAmount  Float?
  previousQuoteDate       DateTime
  previousQuoteNumber     Int
  previousSellPrice       Float
  previousTotalCostAmount Float?
  marginAmount            Float?
  materialAmount          Float?
  productType             String    @default("TG")
  quoteDate               DateTime
  quoteNumber             Int       @unique
  totalCostAmount         Float?
  type                    String
  sellPrice               Float
  updatedAt               DateTime? @updatedAt
}

model Role {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime? @default(now())
  createdBy   User      @relation(name: "createdByRole", fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String    @default("65cf714143abe8bc908d8096") @db.ObjectId
  label       String    @unique
  routes      Route[]   @relation(fields: [routeIds], references: [id])
  routeIds    String[]  @db.ObjectId
  updatedAt   DateTime? @updatedAt
  users       User[]    @relation(fields: [userIds], references: [id])
  userIds     String[]  @db.ObjectId
}

model Route {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime? @default(now())
  createdBy   User      @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String    @default("65cf714143abe8bc908d8096") @db.ObjectId
  href        String    @unique
  group       String
  label       String
  roles       Role[]    @relation(fields: [roleIds], references: [id])
  roleIds     String[]  @db.ObjectId
  updatedAt   DateTime? @updatedAt
}

model User {
  id                           String               @id @default(auto()) @map("_id") @db.ObjectId
  createdAt                    DateTime?            @default(now())
  createdBy                    User                 @relation(name: "createdByUser", fields: [createdById], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdById                  String               @default("65cf714143abe8bc908d8096") @db.ObjectId
  createdByCRMInteractions     CRMInteraction[]
  createdByCustomers           Customer[]
  createdByCustomerContacts    CustomerContact[]
  createdByCustomerTerritories CustomerTerritory[]
  createdByCRMInteractionTypes CRMInteractionType[]
  createdByLogs                Log[]                @relation(name: "createdByLog")
  createdByQuoteMarginQuotes   QuoteMarginQuote[]
  createdByRoles               Role[]               @relation(name: "createdByRole")
  createdByRoutes              Route[]
  createdByUsers               User[]               @relation(name: "createdByUser")
  createdByUserProfiles        UserProfile[]        @relation(name: "createdByUserProfile")
  isActive                     Boolean              @default(false)
  logs                         Log[]
  passwordHash                 String
  profile                      UserProfile?
  roles                        Role[]               @relation(fields: [roleIds], references: [id])
  roleIds                      String[]             @db.ObjectId
  updatedAt                    DateTime?            @updatedAt
  username                     String               @unique
}

model UserProfile {
  id                  String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt           DateTime?     @default(now())
  createdBy           User          @relation(name: "createdByUserProfile", fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById         String        @default("65cf714143abe8bc908d8096") @db.ObjectId
  dateOfHire          DateTime      @default(now())
  employeeNumber      Int           @unique @default(0)
  emailSignatureTitle String        @default("")
  extension           Int           @default(0)
  firstName           String
  lastName            String
  subordinates        UserProfile[] @relation(name: "UserProfileToUserProfile")
  subordinateIds      String[]      @default([]) @db.ObjectId
  supervisor          UserProfile?  @relation(fields: [supervisorId], name: "UserProfileToUserProfile", references: [id], onDelete: NoAction, onUpdate: NoAction)
  supervisorId        String?       @db.ObjectId
  updatedAt           DateTime?     @updatedAt
  user                User?         @relation(fields: [userId], references: [id])
  userId              String        @unique @db.ObjectId
}
