// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AESFeature {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  isPrintable Boolean
  key         String
  seq         Int
  type        String
}

model AESWorkCenter {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  description   String
  fixedOH       Float
  machSetupRate Float
  machRunRate   Float
  number        Int
  setupLabor    Float
  runLabor      Float
  variableOH    Float
}

model FirePricing {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  options  Json
  price    Float
  quantity Int
  type     String
}

model Role {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  label    String   @unique
  routeIds String[] @db.ObjectId
  routes   Route[]  @relation(fields: [routeIds], references: [id])
  userIds  String[] @db.ObjectId
  users    User[]   @relation(fields: [userIds], references: [id])
}

model Route {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  group   String?
  href    String
  label   String
  roleIds String[] @db.ObjectId
  roles   Role[]   @relation(fields: [roleIds], references: [id])
}

model Setting {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  key      String
  boolean  Boolean?
  dateTime DateTime?
  float    Float?
  int      Int?
  json     Json?
  string   String?
}

model User {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  isActive     Boolean      @default(false)
  isOnboarded  Boolean      @default(false)
  passwordHash String
  profile      UserProfile?
  roleIds      String[]     @db.ObjectId
  roles        Role[]       @relation(fields: [roleIds], references: [id])
  username     String       @unique
}

model UserProfile {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  dateHired           DateTime
  ennisId             Int
  email               String   @default("")
  emailSignatureTitle String
  extension           Int
  firstName           String
  lastName            String
  userId              String   @unique @db.ObjectId
  user                User     @relation(fields: [userId], references: [id])
}
